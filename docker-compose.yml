version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/brilhasorte_development
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  api:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b 0.0.0.0"
    volumes:
      - .:/rails
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    environment:
      DEVISE_JWT_SECRET_KEY: <%= Rails.application.credentials.secret_key_base %>
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres:password@db:5432/brilhasorte_development
      REDIS_URL: redis://redis:6379/1
      MP_ACCESS_TOKEN: 'XIU'
    user: "${UID}:${GID}"  # Usa o mesmo UID/GID do host para evitar erro de permiss√£o

  worker:
    build: .
    command: bundle exec sidekiq
    container_name: brilhasorte_worker
    volumes:
      - .:/brilhasorte
    depends_on:
      - db
      - redis
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres:password@db:5432/brilhasorte_development
      REDIS_URL: redis://redis:6379/1
      DEVISE_JWT_SECRET_KEY: <%= Rails.application.credentials.secret_key_base %>
    user: "${UID}:${GID}"  # Mesma ideia aqui

volumes:
  postgres_data:
  redis_data:
